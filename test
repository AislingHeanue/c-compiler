#!/bin/bash

### May change for other devices/languages being used ###
root_test_path=../../nlsandler/writing-a-c-compiler-tests
extra_args="--increment --compound --goto"
binary_path=target/debug/c-compiler
###

### REBUILD BINARY HERE ###
if [[ -n $VERBOSE ]]; then
	cargo build
else
	cargo build --quiet
fi
###

chapter=$1
stage=$2
if [[ -n $stage ]]; then
	results=$($root_test_path/test_compiler ./$binary_path --chapter "$chapter" --stage "$stage" $extra_args 2>&1)
else
	results=$($root_test_path/test_compiler ./$binary_path --chapter "$chapter" --increment $extra_args 2>&1)
fi

passing=true
for chapter_num in $(seq 1 $chapter); do
	chapter_banner_printed=false
	test_path=$root_test_path/tests/chapter_$chapter_num
	for i in $test_path/*; do

		j=$(echo $i | rev | cut -d/ -f1 | rev)
		output=$(echo $results | grep -o "chapter_$chapter_num/$j/[^/]*\.c " | cut -d" " -f1 | rev | cut -d/ -f1 | rev)
		if [[ -n $output ]]; then
			if ! $chapter_banner_printed; then
				echo ==============
				printf "= CHAPTER %-2s =\n" $chapter_num
				echo ==============
				chapter_banner_printed=true
			fi
			passing=false
			echo TESTS FAILED IN \"${j}\":
			echo -------
			if [[ -n $VERBOSE ]]; then
				echo "$output" | xargs -I{} bat $test_path/$j/{}
			else
				echo "$output"
			fi
		fi
	done
done
if $passing; then
	echo "$results"
	exit 0
else
	exit 1
fi
